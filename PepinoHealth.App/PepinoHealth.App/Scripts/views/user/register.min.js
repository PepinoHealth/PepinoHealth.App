function bindControlsOnLoadInLogin(){validateNLogin();hideModal("loader")}function validateNLogin(){$("#formLogin").bootstrapValidator({live:liveType.Disabled,fields:{txtUsername:{validators:{notEmpty:{message:"Required."}}},txtPassword:{validators:{notEmpty:{message:"Required."},callback:{callback:function(n){let t=null;return n.length>0?(t=validateUser(),{valid:t,message:"The Username/Password combination is not valid. Try again."}):!0}}}}}}).on("success.form.bv",function(n){n.preventDefault();validateUserNNavigate()})}function validateUser(){var t=JSON.stringify({Username:$("#txtUsername").val().toLowerCase().trim(),Password:$("#txtPassword").val()}),n=!1;return callAPI(validateUserUrl,apiType.Post,asyncType.False,cacheType.False,t,dataNature.Json,function(t){n=validUser=t.Valid}),n}function validateUserNNavigate(){let n=validUser?validUser:validateUser();n&&(showModal("loader"),readUserInfoNNavigate())}function readUserInfoNNavigate(){let n=JSON.stringify({Username:$("#txtUsername").val().toLowerCase().trim()}),t=quickLinksUrl;grantAccess(n,t)}function grantAccess(n,t){callAPI(grantAccessUrl,apiType.Post,asyncType.True,cacheType.False,n,dataNature.Json,function(n){n&&(window.location.href=t)})}var validateUserUrl=null,grantAccessUrl=null,quickLinksUrl=null,validUser=null;