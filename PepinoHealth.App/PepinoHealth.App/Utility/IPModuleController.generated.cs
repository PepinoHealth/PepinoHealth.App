// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace PepinoHealth.App.Controllers
{
    public partial class IPModuleController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public IPModuleController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected IPModuleController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }


        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public IPModuleController Actions { get { return MVC.IPModule; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "IPModule";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "IPModule";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string IPDRegistration = "IPDRegistration";
            public readonly string DischargeSummary = "DischargeSummary";
            public readonly string ObstetricDischargeSummary = "ObstetricDischargeSummary";
            public readonly string IPReports = "IPReports";
            public readonly string IPCaseSheet = "IPCaseSheet";
            public readonly string Page1 = "Page1";
            public readonly string Page2 = "Page2";
            public readonly string ObstetricsSonography = "ObstetricsSonography";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string IPDRegistration = "IPDRegistration";
            public const string DischargeSummary = "DischargeSummary";
            public const string ObstetricDischargeSummary = "ObstetricDischargeSummary";
            public const string IPReports = "IPReports";
            public const string IPCaseSheet = "IPCaseSheet";
            public const string Page1 = "Page1";
            public const string Page2 = "Page2";
            public const string ObstetricsSonography = "ObstetricsSonography";
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string DischargeSummary = "DischargeSummary";
                public readonly string IPCaseSheet = "IPCaseSheet";
                public readonly string IPDRegistration = "IPDRegistration";
                public readonly string IPReports = "IPReports";
                public readonly string ObstetricDischargeSummary = "ObstetricDischargeSummary";
                public readonly string ObstetricsSonography = "ObstetricsSonography";
                public readonly string Page1 = "Page1";
                public readonly string Page2 = "Page2";
            }
            public readonly string DischargeSummary = "~/Views/IPModule/DischargeSummary.cshtml";
            public readonly string IPCaseSheet = "~/Views/IPModule/IPCaseSheet.cshtml";
            public readonly string IPDRegistration = "~/Views/IPModule/IPDRegistration.cshtml";
            public readonly string IPReports = "~/Views/IPModule/IPReports.cshtml";
            public readonly string ObstetricDischargeSummary = "~/Views/IPModule/ObstetricDischargeSummary.cshtml";
            public readonly string ObstetricsSonography = "~/Views/IPModule/ObstetricsSonography.cshtml";
            public readonly string Page1 = "~/Views/IPModule/Page1.cshtml";
            public readonly string Page2 = "~/Views/IPModule/Page2.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_IPModuleController : PepinoHealth.App.Controllers.IPModuleController
    {
        public T4MVC_IPModuleController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IPDRegistrationOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult IPDRegistration()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IPDRegistration);
            IPDRegistrationOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DischargeSummaryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult DischargeSummary()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DischargeSummary);
            DischargeSummaryOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ObstetricDischargeSummaryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ObstetricDischargeSummary()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ObstetricDischargeSummary);
            ObstetricDischargeSummaryOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void IPReportsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult IPReports()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IPReports);
            IPReportsOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void IPCaseSheetOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult IPCaseSheet()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.IPCaseSheet);
            IPCaseSheetOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void Page1Override(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Page1()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Page1);
            Page1Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void Page2Override(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Page2()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Page2);
            Page2Override(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void ObstetricsSonographyOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult ObstetricsSonography()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ObstetricsSonography);
            ObstetricsSonographyOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
